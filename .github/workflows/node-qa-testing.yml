---
"on":
  workflow_call:
    inputs:
      node_versions:
        description: Node versions matrix to test on
        default: "['16.x', '17.x', '18.x']"
        required: false
        type: string
      format_command:
        description: Format command to run. Disabled by default
        default:
        required: false
        type: string
      lint_command:
        description: Lint command to run. To disable set to ''
        default: npm run lint
        required: false
        type: string
      build_command:
        description: Build command to run
        default: npm run build
        required: false
        type: string
      test_command:
        description: Base test command to run. To disable set to ''
        default: npm run test
        required: false
        type: string
      run_jest_coverage:
        description: Run and report the coverage with jest. Uses test_command as base.
        default: true
        required: false
        type: boolean
      skip_coverage_report:
        description: Skip coverage reporting for resources that can not accept comments
        default: false
        required: false
        type: boolean

jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ${{ fromJson(inputs.node_versions) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm
      - name: Install node dependencies
        run: npm ci
      - name: Extract the last matrix job index
        env:
          LAST_JOB_INDEX_OFFSET: ${{ strategy.job-total}}
        run: echo LAST_JOB_INDEX="$((LAST_JOB_INDEX_OFFSET-1))" >> "$GITHUB_ENV"
      - name: Check formatting
        # Use strategy.job-index == env.LAST_JOB_INDEX to run this step only on the last matrix value
        if: inputs.format_command != '' && strategy.job-index == env.LAST_JOB_INDEX
        run: ${{ inputs.format_command }}
      - name: Check linting
        if: inputs.lint_command != '' && strategy.job-index == env.LAST_JOB_INDEX
        run: ${{ inputs.lint_command }}
      - name: Run test build
        run: ${{ inputs.build_command }}
      - name: Run tests
        if: inputs.test_command != '' && !inputs.run_jest_coverage
        run: ${{ inputs.test_command }}
      - name: Run tests with coverage
        if: inputs.test_command != '' && inputs.run_jest_coverage
        run: ${{ inputs.test_command }} --- --ci --json --coverage --testLocationInResults --outputFile=report.json
      - name: Report coverage
        if: inputs.skip_coverage_report == false && inputs.test_command != '' && inputs.run_jest_coverage && strategy.job-index == env.LAST_JOB_INDEX
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          coverage-file: report.json
          base-coverage-file: report.json
          skip-step: all
